{"version":3,"file":"operations.js","sourceRoot":"","sources":["../src/operations.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAI9C,IAAI,UAAU,GAAgD,EAAE,CAAC;AAEjE,MAAM,UAAU,kCAAkC,CAAC,WAAW;IAC5D,IAAI,CAAC,CAAC,WAAW,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE;QACrF,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KAC7C;AACH,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,QAAQ,EAAE,WAAW;IAC7D,kCAAkC,CAAC,WAAW,CAAC,CAAC;IAChD,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,CAAC;AAED,MAAM,UAAU,4BAA4B,CAAC,QAAQ,EAAE,WAAW;IAChE,kCAAkC,CAAC,WAAW,CAAC,CAAC;IAEhD,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAElE,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;QACf,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEnD,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,OAAO,UAAU,CAAC,WAAW,CAAC,CAAC;SAChC;KACF;AACH,CAAC;AAED,eAAe;AACf,MAAM,UAAU,iBAAiB,CAC/B,OAKC,EACD,aAAqD;IAErD,IAAI,OAAO,GAAa,CAAC,aAAa,CAAC,CAAC;IAExC,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;QACxC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,OAAO,CAAC,kBAAkB,KAAK,SAAS,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;gBACzC,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;oBACxC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;iBACtC;aACF;SACF;KACF;IACD,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,EAAU;IAC3C,OAAO,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,SAAoB,EAAE,gBAAkC;IACnF,OAAO,iBAAiB,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,gBAAgB,CAAC,CAAC;AACrE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,WAAwB,EACxB,gBAAkC;IAElC,UAAU,CAAC,WAAW,CAAC,GAAG,gBAAgB,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,WAAwB;IAC3D,IAAI,WAAW,IAAI,UAAU,EAAE;QAC7B,OAAO,UAAU,CAAC,WAAW,CAAC,CAAC;KAChC;AACH,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,WAAwB;IACxD,OAAO,UAAU,CAAC,WAAW,CAAC,CAAC;AACjC,CAAC;AAED,MAAM,UAAU,aAAa;IAC3B,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import {\n  CharacteristicProperty,\n  OperationHandler,\n  OperationId,\n  OperationType,\n} from './Bluetooth.types';\nimport { DELIMINATOR } from './ExpoBluetooth';\n// TODO: this is a cycle\nimport Operation from './Operation';\n\nlet operations: { [operationId: string]: OperationHandler } = {};\n\nexport function ensureCallbacksArrayForOperationId(operationId) {\n  if (!(operationId in operations) || !Array.isArray(operations[operationId].callbacks)) {\n    operations[operationId] = { callbacks: [] };\n  }\n}\n\nexport function addCallbackForOperationId(callback, operationId) {\n  ensureCallbacksArrayForOperationId(operationId);\n  operations[operationId].callbacks.push(callback);\n}\n\nexport function removeCallbackForOperationId(callback, operationId) {\n  ensureCallbacksArrayForOperationId(operationId);\n\n  const index = operations[operationId].callbacks.indexOf(callback);\n\n  if (index != -1) {\n    operations[operationId].callbacks.splice(index, 1);\n\n    if (operations[operationId].callbacks.length === 0) {\n      delete operations[operationId];\n    }\n  }\n}\n\n// Interactions\nexport function createOperationId(\n  options: {\n    peripheralUUID?: string;\n    serviceUUID?: string;\n    characteristicUUID?: string;\n    descriptorUUID?: string;\n  },\n  operationType: OperationType | CharacteristicProperty\n): string {\n  let targets: string[] = [operationType];\n\n  if (options.peripheralUUID !== undefined) {\n    targets.push(options.peripheralUUID);\n    if (options.serviceUUID !== undefined) {\n      targets.push(options.serviceUUID);\n      if (options.characteristicUUID !== undefined) {\n        targets.push(options.characteristicUUID);\n        if (options.descriptorUUID !== undefined) {\n          targets.push(options.descriptorUUID);\n        }\n      }\n    }\n  }\n  return targets.join(DELIMINATOR);\n}\n\nexport function peripheralIdFromId(id: string): string {\n  return id.split(DELIMINATOR)[0];\n}\n\nexport function addOperation(operation: Operation, operationHandler: OperationHandler) {\n  return addOperationForId(operation.generateId(), operationHandler);\n}\n\nexport function addOperationForId(\n  operationId: OperationId,\n  operationHandler: OperationHandler\n) {\n  operations[operationId] = operationHandler;\n}\n\nexport function deleteOperationForId(operationId: OperationId) {\n  if (operationId in operations) {\n    delete operations[operationId];\n  }\n}\n\nexport function getOperationForId(operationId: OperationId): OperationHandler | undefined {\n  return operations[operationId];\n}\n\nexport function getOperations(): { [operationId: string]: OperationHandler } {\n  return operations;\n}\n"]}